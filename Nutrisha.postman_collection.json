{
	"info": {
		"_postman_id": "34ad7954-e633-4eea-8916-ebf265a340b6",
		"name": "Nutrisha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18549887"
	},
	"item": [
		{
			"name": "Splash Screen",
			"item": [
				{
					"name": "Splash Screen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/api/Splash",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"Splash"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register with Email",
			"item": [
				{
					"name": "Register with Email [Happy Scenario]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register [Email existed]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register with Phone number",
			"item": [
				{
					"name": "Register with Mobile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[BUG 93] Register [Mobile existed]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"Amr_2022\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify Account",
			"item": [
				{
					"name": "Register with Email [Happy Scenario]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Mobile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByMobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeMobile\", code);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"email\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Email]CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Email]CheckVerifyCode/Otp Validation + Verify Email [Wrong/Expired Code]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"InValied Verify Code\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": 1111\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mobile]CheckVerifyCode/Otp Validation + Verify Mobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"virfeyCode\": {{verifyCodeMobile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mobile]CheckVerifyCode/Otp Validation + Verify Mobile [Wrong/Expired Code]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"InValied Verify Code\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"virfeyCode\": 1111\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckAccountVerified using ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetAccountVerified?userId=1093",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetAccountVerified"
							],
							"query": [
								{
									"key": "userId",
									"value": "1093"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Forget Password by Mobile",
			"item": [
				{
					"name": "Register with Mobile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByMobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeMobile\", code);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"email\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mobile]CheckVerifyCode/Otp Validation + Verify Mobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"virfeyCode\": {{verifyCodeMobile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "ForgetPasswordByMobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"verifyCode\": {{verifyCodeMobile}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByMobile",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByMobile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number [Using old pw]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"mobile and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number [Using new pw]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"qwert1\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "ForgetPasswordByMobile [Unregistered Mobile]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"Wrong credentials\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"01003936065\",\r\n    \"verifyCode\": {{verifyCodeMobile}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByMobile",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByMobile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Mobile [Creating unverified phone number]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber_unverified\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber_unverified}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[BUG 101] ForgetPasswordByMobile [Unverified Mobile]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber_unverified}}\",\r\n    \"verifyCode\": {{verifyCodeMobile}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByMobile",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByMobile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Forget Password by Email",
			"item": [
				{
					"name": "Register with Email [Happy Scenario]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Email]CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "ForgetPasswordByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"verifyCode\": {{verifyCodeEmail}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByEmail",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByEmail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email [Using old pw]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"email and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email [Using new pw]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"qwert1\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "ForgetPasswordByEmail [Unregistered Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"Wrong credentials\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"boshramohamed@gmail.com\",\r\n    \"verifyCode\": {{verifyCodeEmail}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByEmail",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByEmail"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Email [Creating unverified email]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email_unverified\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email_unverified}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[BUG 101] ForgetPasswordByEmail [Unverified Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email_unverified}}\",\r\n    \"verifyCode\": {{verifyCodeEmail}},\r\n    \"newPassword\": \"qwert1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/ForgetPasswordByEmail",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"ForgetPasswordByEmail"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sign in with Email",
			"item": [
				{
					"name": "Register with Email [Happy Scenario]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email [Happy Scenario]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email [Wrong Email Format]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"email and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"\",\n    \"email\": \"Ahmed\",\n    \"password\": \"77\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email [Wrong password]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"email and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"\",\n    \"email\": \"Ahmed@yahoo.com\",\n    \"password\": \"777\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Email [Creating unverified email]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email_unverified\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email_unverified}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[BUG 100] Sign in with Email [Without Verify Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"Account Not Verfied\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email_unverified}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sign in with Phone number",
			"item": [
				{
					"name": "Register with Mobile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByMobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeMobile\", code);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"email\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mobile]CheckVerifyCode/Otp Validation + Verify Mobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"virfeyCode\": {{verifyCodeMobile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number [Happy Scenario]",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number [Wrong Phone number]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"mobile and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"1\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number[Wrong password]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"mobile and password combination isn’t correct\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"1\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Mobile [Creating unverified phone number] Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber_unverified\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber_unverified}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[BUG 100] Sign in with Phone number [Without Verify Phone number]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
									"const responseJson = pm.response.json();\r",
									"const messagetest = responseJson.message;\r",
									"\r",
									"pm.test(\"Check that message is \" + messagetest,()=>pm.expect(messagetest).that.is.equal,(\"Account not verified\")); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber_unverified}}\",\r\n    \"email\": \"\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "On Boarding",
			"item": [
				{
					"name": "Complete data cycle",
					"item": [
						{
							"name": "Register with Mobile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
											"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
											"\r",
											"//_______________________\r",
											"function generateRandomPhoneNumber(length) {\r",
											"    var result           = '';\r",
											"    var characters       = '0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return \"010\"+result;\r",
											"}\r",
											"//----------------------\r",
											"function generateRandomUserName(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return \"1\"+result;\r",
											"}\r",
											"//-------------\r",
											"function generateRandomName(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}\r",
											"//------------------------------------------------------------------------"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"const dataTest = responseJson.data;\r",
											"const allUserTest = dataTest.allUser;\r",
											"const idTest = allUserTest.id;\r",
											"\r",
											"pm.environment.set(\"userId\", idTest);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/Register",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"Register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send verify code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"const dataTest = responseJson.data;\r",
											"const virfeyCodeTest = dataTest.virfeyCode;\r",
											"\r",
											"\r",
											"pm.environment.set(\"virfeyCode\", virfeyCodeTest);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"mobile\":\"{{signup_phoneNumber}}\",\"email\":\"\"}"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"GetVerifyCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"\",\"mobile\":\"{{signup_phoneNumber}}\",\"virfeyCode\":{{virfeyCode}}}"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/CheckVerifyCode",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"CheckVerifyCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete data [Happy scenario]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "JourneyPlanId",
											"value": "",
											"type": "text"
										},
										{
											"key": "UserId",
											"value": "{{userId}}",
											"type": "text"
										},
										{
											"key": "Height",
											"value": "185",
											"type": "text"
										},
										{
											"key": "Name",
											"value": "Amr badri",
											"type": "text"
										},
										{
											"key": "IsDataComplete",
											"value": "",
											"type": "text"
										},
										{
											"key": "UserAllergy",
											"value": "",
											"type": "text"
										},
										{
											"key": "Weight",
											"value": "90",
											"type": "text"
										},
										{
											"key": "UserRisk",
											"value": "1",
											"type": "text"
										},
										{
											"key": "UserRisk",
											"value": "2",
											"type": "text"
										},
										{
											"key": "GenderId",
											"value": "",
											"type": "text"
										},
										{
											"key": "BMI",
											"value": "",
											"type": "text"
										},
										{
											"key": "IsAvailable",
											"value": "",
											"type": "text"
										},
										{
											"key": "Age",
											"value": "27",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/CompleteUserData",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"CompleteUserData"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register with Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
											"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
											"\r",
											"//-----------------\r",
											"function generateRandomEmail() {\r",
											"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
											"}\r",
											"//----------------------\r",
											"function generateRandomUserName(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return \"1\"+result;\r",
											"}\r",
											"//-------------\r",
											"function generateRandomName(length) {\r",
											"    var result           = '';\r",
											"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for ( var i = 0; i < length; i++ ) {\r",
											"      result += characters.charAt(Math.floor(Math.random() * \r",
											" charactersLength));\r",
											"   }\r",
											"   return result;\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"const dataTest = responseJson.data;\r",
											"const allUserTest = dataTest.allUser;\r",
											"const idTest = allUserTest.id;\r",
											"\r",
											"pm.environment.set(\"userId2\", idTest);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/Register",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"Register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send verify code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"const dataTest = responseJson.data;\r",
											"const virfeyCodeTest = dataTest.virfeyCode;\r",
											"\r",
											"\r",
											"pm.environment.set(\"virfeyCode2\", virfeyCodeTest);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"mobile\":\"\",\"email\":\"{{signup_email}}\"}"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"GetVerifyCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{signup_email}}\",\"mobile\":\"\",\"virfeyCode\":{{virfeyCode2}}}"
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/CheckVerifyCode",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"CheckVerifyCode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete data [Happy scenario]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Notes",
											"value": "",
											"type": "text"
										},
										{
											"key": "JourneyPlanId",
											"value": "",
											"type": "text"
										},
										{
											"key": "UserId",
											"value": "{{userId2}}",
											"type": "text"
										},
										{
											"key": "Height",
											"value": "190",
											"type": "text"
										},
										{
											"key": "Name",
											"value": "Amr badri 2",
											"type": "text"
										},
										{
											"key": "IsDataComplete",
											"value": "",
											"type": "text"
										},
										{
											"key": "UserAllergy",
											"value": "",
											"type": "text"
										},
										{
											"key": "Weight",
											"value": "90",
											"type": "text"
										},
										{
											"key": "UserRisk",
											"value": "1",
											"type": "text"
										},
										{
											"key": "UserRisk",
											"value": "2",
											"type": "text"
										},
										{
											"key": "GenderId",
											"value": "",
											"type": "text"
										},
										{
											"key": "BMI",
											"value": "",
											"type": "text"
										},
										{
											"key": "IsAvailable",
											"value": "",
											"type": "text"
										},
										{
											"key": "Age",
											"value": "30",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrlNutrisha}}/User/CompleteUserData",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"User",
										"CompleteUserData"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GoaL",
					"item": [
						{
							"name": "JourneyPlan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrlNutrisha}}/JourneyPlan",
									"host": [
										"{{baseUrlNutrisha}}"
									],
									"path": [
										"JourneyPlan"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Risks",
					"item": [
						{
							"name": "Risk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "https://api.nutrisha.app/api/Risk",
									"protocol": "https",
									"host": [
										"api",
										"nutrisha",
										"app"
									],
									"path": [
										"api",
										"Risk"
									]
								}
							},
							"response": []
						},
						{
							"name": "UserRisk",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "https://api.nutrisha.app/api/UserRisk",
									"protocol": "https",
									"host": [
										"api",
										"nutrisha",
										"app"
									],
									"path": [
										"api",
										"UserRisk"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Blog",
			"item": [
				{
					"name": "Register with Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginToken\", tokenTest);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Blog List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data[1];\r",
									"const idTest = dataTest.id;\r",
									"pm.environment.set(\"tagId\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/BlogTag/GetAll",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"BlogTag",
								"GetAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Filter Blog List [Unauthorized Token]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/BlogTag/GetAll",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"BlogTag",
								"GetAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Returns all Blog Timeline by TagId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Blog/GetPagedList?PageNumber=1&PageSize=10&TagId={{tagId}}",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Blog",
								"GetPagedList"
							],
							"query": [
								{
									"key": "PageNumber",
									"value": "1"
								},
								{
									"key": "PageSize",
									"value": "10"
								},
								{
									"key": "TagId",
									"value": "{{tagId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Returns all Blog Timeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"\r",
									"for(var i = 0; i < dataTest.length; i++){\r",
									"    var dataValues = dataTest[i];\r",
									"\r",
									"    if (dataTest[i].entityType === 0)\r",
									"    {\r",
									"        const idTest = dataTest[i].id;\r",
									"        const entityTypeTest = dataTest[i].entityType;\r",
									"        pm.environment.set(\"entityArticleId\", idTest);\r",
									"        pm.environment.set(\"entityTypeId\", entityTypeTest);\r",
									"    }\r",
									"\r",
									"     if (dataTest[i].entityType === 1)\r",
									"     {\r",
									"         const idTest = dataTest[i].id;\r",
									"         const additionalDataTest = dataTest[i].additionalData;\r",
									"         const questionsTest = additionalDataTest.questions;\r",
									"         const questionsIdFirst = questionsTest[0].id;\r",
									"         const questionsIdSecond = questionsTest[1].id;\r",
									"         pm.environment.set(\"selectedQuestionIdFirst\",questionsIdFirst)\r",
									"         pm.environment.set(\"selectedQuestionIdSecond\",questionsIdSecond)\r",
									"         pm.environment.set(\"pollId\",idTest);\r",
									"\r",
									"     }\r",
									"\r",
									"\r",
									"\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Blog/GetPagedList?PageNumber=1&PageSize=10",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Blog",
								"GetPagedList"
							],
							"query": [
								{
									"key": "PageNumber",
									"value": "1"
								},
								{
									"key": "PageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Article Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Blog/GetById?id={{entityArticleId}}&entityType=0",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Blog",
								"GetById"
							],
							"query": [
								{
									"key": "id",
									"value": "{{entityArticleId}}"
								},
								{
									"key": "entityType",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reaction Like to Article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reaction Like to Article [Already added before]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"You already reacted on this entity.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Comment [Happy]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest.id;\r",
									"pm.environment.set(\"commentId\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"content\": \"Test boshra\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/comment/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"comment",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reaction Like to comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{commentId}},\n    \"EntityType\": 3,\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reaction Like to comment [Already added before]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"You already reacted on this entity.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{commentId}},\n    \"EntityType\": 3,\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Comment List >> Check comments + likes of the comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/comment/GetPagedList?pageNumber=1&PageSize=10&entityId={{entityArticleId}}",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"comment",
								"GetPagedList"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "PageSize",
									"value": "10"
								},
								{
									"key": "entityId",
									"value": "{{entityArticleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/comment/delete?id={{commentId}}",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"comment",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reaction Like from a Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"No Entity With This Id.\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{commentId}},\n    \"EntityType\": 3,\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/Delete",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"Delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reaction Like from Article ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/Delete",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"Delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reaction Like to Article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"reactionType\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/reaction/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"reaction",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Comment [Limit more than 280]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"Comment Content Should be from 1 character to 280 character\"));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"content\": \"Quality control (QC) is a procedure or set of procedures intended to ensure that a manufactured product or performed service adheres to a defined set of quality criteria or meets the requirements of the client or customer. QC is similar to, but not identical with, quality assuranc\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/comment/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"comment",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Comment [Empty Comment]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"Comment Content Should be from 1 character to 280 character\"));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entityId\": {{entityArticleId}},\n    \"EntityType\": {{entityTypeId}},\n    \"content\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/comment/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"comment",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Answer to Poll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pollId\": {{pollId}},\n    \"SelectedQuestionId\": {{selectedQuestionIdFirst}}\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/PollAnswer/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"PollAnswer",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Answer to Poll [Select 2nd option after choosing the 1st one]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"You Can Answer Only One Time.\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pollId\": {{pollId}},\n    \"SelectedQuestionId\": {{selectedQuestionIdSecond}}\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/PollAnswer/post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"PollAnswer",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Login ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginTokenAdmin\", tokenTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"boshra.nour@getbrito.com\",\n    \"password\": \"Boshra_2022\"\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/admin/api/v1/auth/login",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin:Add Poll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Question\": \"Test Q.\",\n    \"Answers\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \"BackgroundColor\": \"#16ad16\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Poll/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Poll",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Get Polls",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/admin/api/v1/Poll/GetPagedList?pageNumber=1&PageSize=10",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"Poll",
								"GetPagedList"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "PageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Blog Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"pm.environment.set(\"RandomPassword\", dataTest);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TestTag\",\n    \"Color\": \"#ada331\" // \n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/BlogTag/Post",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"BlogTag",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article [PNG]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"pm.environment.set(\"articleId\",dataTest);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "boshra cover image test",
									"type": "text"
								},
								{
									"key": "description.ar",
									"value": "boshra final test desc",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/bryan-goff-528824-unsplash.jpg"
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text"
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/Pepsi.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Get Article Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/admin/api/v1/Article/GetById?id={{articleId}}",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"Article",
								"GetById"
							],
							"query": [
								{
									"key": "id",
									"value": "{{articleId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article  [Jpeg]",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "test boshra 2",
									"type": "text"
								},
								{
									"key": "description.ar",
									"value": "test boshra desc 2",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/bar code 2.png"
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text"
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/Pepsi.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article  [URL YouTube Video]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "Title Test",
									"type": "text"
								},
								{
									"key": "description.ar",
									"value": "Desc Test",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/divjot-ratra-698430-unsplash.jpg"
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text"
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "ExternalMedia[0].url",
									"value": "https://www.youtube.com/watch?v=BGkL2Pq-g3A",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article  [URL Facebook Video]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "Title Test",
									"type": "text"
								},
								{
									"key": "description.ar",
									"value": "Desc Test",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/divjot-ratra-698430-unsplash.jpg"
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text"
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "ExternalMedia[0].url",
									"value": "https://fb.watch/dn6FNmbir2/",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article  [GIF]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "Title Test",
									"type": "text"
								},
								{
									"key": "description.ar",
									"value": "Desc Test",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/divjot-ratra-698430-unsplash.jpg"
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text"
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/logo-g.gif"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Add Article  [Without Cover Image]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessageTest = responseJson.errorMessage;\r",
									"pm.test(\"Validate errorMessage is: \"+ errorMessageTest,()=>pm.expect(errorMessageTest).that.is.equal(\"Please Add Valid Files\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "subject",
									"value": "Title Test",
									"type": "text"
								},
								{
									"key": "description.en",
									"value": "Desc Test",
									"type": "text"
								},
								{
									"key": "tagId",
									"value": "{{tagId}}",
									"type": "text"
								},
								{
									"key": "Files[0].file",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "Files[0].Flags",
									"value": "CoverImage",
									"type": "text",
									"disabled": true
								},
								{
									"key": "Files[1].file",
									"type": "file",
									"src": "/D:/Data/Boshra/Augmina/divjot-ratra-698430-unsplash.jpg"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/Article/Post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"Article",
								"Post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "Register with Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginToken\", tokenTest);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Custom Allergy [Others]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest.id;\r",
									"\r",
									"pm.environment.set(\"allergyIdCustom\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"allergyName\": \"xyz\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/Post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Allergy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest[0].id;\r",
									"pm.environment.set(\"allergyId\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/GetAll",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"GetAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Allergy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AllergyIds\": [{{allergyId}},{{allergyIdCustom}}]\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSelectedAllergies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/GetSelectedAllergies",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"GetSelectedAllergies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Allergy [Deselect]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"AllergyIds\": [{{allergyId}}]\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSelectedAllergies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/Allergy/GetSelectedAllergies",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"Allergy",
								"GetSelectedAllergies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Custom Dislike [Others]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest.id;\r",
									"\r",
									"pm.environment.set(\"dislikeIdCustom\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dislikedMealName\": \"الفول\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/Post",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Dislikes ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest[0].id;\r",
									"pm.environment.set(\"dislikeId\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/GetAll",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"GetAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Dislike",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DislikedMealIds\": [{{dislikeId}}, {{dislikeIdCustom}}]\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSelectedDislikes ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/GetSelectedDislikedMeals",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"GetSelectedDislikedMeals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Dislike [Deselect]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"DislikedMealIds\": [{{dislikeId}}]\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSelectedDislikes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/DislikeMeal/GetSelectedDislikedMeals",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"DislikeMeal",
								"GetSelectedDislikedMeals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Reminder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const idTest = dataTest.id;\r",
									"pm.environment.set(\"reminderId\", idTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Title\": \"test1\",\n    \"ReminderType\": 2,\n    \"OccurrenceDays\": [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n    \"Time\": \"13:50\"\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/Reminder/Post",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"Reminder",
								"Post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Reminder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ReminderId\": {{reminderId}},\n    \"Title\": \"test2\",\n    \"OccurrenceDays\": [\"Sunday\",1,2,3,4,5,6],\n    \"Time\": \"19:50\"\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/Reminder/Put",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"Reminder",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reminder Turn on/off",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reminderId\": {{reminderId}},\n    \"turnOn\": false\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/Reminder/TurnOn",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"Reminder",
								"TurnOn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Reminders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/Reminder/GetAll",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"Reminder",
								"GetAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Reminder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/Reminder/Delete?id={{reminderId}}",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"Reminder",
								"Delete"
							],
							"query": [
								{
									"key": "id",
									"value": "{{reminderId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Edit profile",
			"item": [
				{
					"name": "Register with [Mobile]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumberEditProfile\", generateRandomPhoneNumber(10));\r",
									"pm.environment.set(\"signup_passwordEditProfile\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumberEditProfile}}\",\n    \"password\": \"{{signup_passwordEditProfile}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send verified code [Mobile]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmailEditProfile\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumberEditProfile}}\",\r\n    \"email\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify account [Mobile]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumberEditProfile}}\",\r\n    \"virfeyCode\": {{verifyCodeEmailEditProfile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with [Mobile]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"tokenLoginMobileEditProfile\", tokenTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumberEditProfile}}\", \n    \"password\": \"{{signup_passwordEditProfile}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit profile [Mobile]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tokenLoginMobileEditProfile}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "FirstName",
									"value": "Boshra",
									"type": "text"
								},
								{
									"key": "LastName",
									"value": "Nour",
									"type": "text"
								},
								{
									"key": "MobileNumber",
									"value": "{{signup_phoneNumberEditProfile}}",
									"type": "text"
								},
								{
									"key": "GenderId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "Weight",
									"value": "65",
									"type": "text"
								},
								{
									"key": "Height",
									"value": "170",
									"type": "text"
								},
								{
									"key": "BirthDate",
									"value": "09-20-1995",
									"type": "text"
								},
								{
									"key": "PersonalImage",
									"type": "file",
									"src": "/C:/Users/amrba/Downloads/image.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/profile/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"profile",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with [Email]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_emailEditProfile\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_passwordEditProfile\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_emailEditProfile}}\",\n    \"password\": \"{{signup_passwordEditProfile}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send verified code [Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmailEditProfile\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_emailEditProfile}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify account [Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_emailEditProfile}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmailEditProfile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with [Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"tokenLoginEmailEditProfile\", tokenTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_emailEditProfile}}\",\r\n    \"password\": \"{{signup_passwordEditProfile}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete data [Happy scenario] Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Notes",
									"value": "",
									"type": "text"
								},
								{
									"key": "JourneyPlanId",
									"value": "",
									"type": "text"
								},
								{
									"key": "UserId",
									"value": "{{userId2}}",
									"type": "text"
								},
								{
									"key": "Height",
									"value": "190",
									"type": "text"
								},
								{
									"key": "Name",
									"value": "Amr badri 2",
									"type": "text"
								},
								{
									"key": "IsDataComplete",
									"value": "",
									"type": "text"
								},
								{
									"key": "UserAllergy",
									"value": "",
									"type": "text"
								},
								{
									"key": "Weight",
									"value": "90",
									"type": "text"
								},
								{
									"key": "UserRisk",
									"value": "1",
									"type": "text"
								},
								{
									"key": "UserRisk",
									"value": "2",
									"type": "text"
								},
								{
									"key": "GenderId",
									"value": "",
									"type": "text"
								},
								{
									"key": "BMI",
									"value": "",
									"type": "text"
								},
								{
									"key": "IsAvailable",
									"value": "",
									"type": "text"
								},
								{
									"key": "Age",
									"value": "30",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/CompleteUserData",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"CompleteUserData"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit profile [Email]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tokenLoginEmailEditProfile}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "FirstName",
									"value": "Abdo",
									"type": "text"
								},
								{
									"key": "LastName",
									"value": "ali",
									"type": "text"
								},
								{
									"key": "MobileNumber",
									"value": "0152014474",
									"type": "text"
								},
								{
									"key": "GenderId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "Weight",
									"value": "95",
									"type": "text"
								},
								{
									"key": "Height",
									"value": "185",
									"type": "text"
								},
								{
									"key": "BirthDate",
									"value": "06-25-1994",
									"type": "text"
								},
								{
									"key": "PersonalImage",
									"type": "file",
									"src": "/C:/Users/amrba/Downloads/image.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/profile/Put",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"profile",
								"Put"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get edit profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{tokenLoginEmailEditProfile}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/profile/GetCurrentUserProfile",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"profile",
								"GetCurrentUserProfile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Measurement",
			"item": [
				{
					"name": "Register with Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email_measurements\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password_measurements\", generateRandomUserName(7));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@gmail.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email_measurements}}\",\n    \"password\": \"{{signup_password_measurements}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"\r",
									"pm.environment.set(\"verifyCodeEmail_measurements\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email_measurements}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email_measurements}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail_measurements}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginToken_measurements\", tokenTest);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email_measurements}}\",\r\n    \"password\": \"{{signup_password_measurements}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Multi Measurements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken_measurements}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"MeasurementType\": 1,\n        \"MeasurementValue\": 100\n    },\n    {\n        \"MeasurementType\": 2,\n        \"MeasurementValue\": 200\n    },\n    {\n        \"MeasurementType\": 3,\n        \"MeasurementValue\": 300\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/UserMeasurement/PostMultiMeasurements",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"UserMeasurement",
								"PostMultiMeasurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Measurements [Get type 1 of measurement]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken_measurements}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/UserMeasurement/GetMeasurements?measurementTypes=1",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"UserMeasurement",
								"GetMeasurements"
							],
							"query": [
								{
									"key": "measurementTypes",
									"value": "1"
								},
								{
									"key": "measurementTypes",
									"value": "{{}}",
									"disabled": true
								},
								{
									"key": "measurementTypes",
									"value": "{{}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Measurements [Get multiple types of measuremeents]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken_measurements}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNew}}/UserMeasurement/GetMeasurements?measurementTypes=1&measurementTypes=2&measurementTypes=3",
							"host": [
								"{{baseUrlNutrishaNew}}"
							],
							"path": [
								"UserMeasurement",
								"GetMeasurements"
							],
							"query": [
								{
									"key": "measurementTypes",
									"value": "1"
								},
								{
									"key": "measurementTypes",
									"value": "2"
								},
								{
									"key": "measurementTypes",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Meals Admin&Mobile",
			"item": [
				{
					"name": "Admin: Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginTokenAdmin\", tokenTest);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"boshra.nour@getbrito.com\",\n    \"password\": \"Boshra_2022\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/auth/login",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Post Ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randomIngredient\", generateRandomUserName(10));\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{randomIngredient}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/PostIngredient",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"PostIngredient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Post Ingredient [Post with the same ingredient name]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"const errorMessagetest = responseJson.errorMessage;\r",
									"\r",
									"pm.test(\"Validate Username required is Correct\",()=>pm.expect(errorMessagetest).that.is.equal(\"This Ingredient Already Exists.\"));\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{randomIngredient}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/PostIngredient",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"PostIngredient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Get Ingredient Lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/GetIngredientLookup?searchWOrd=m",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"GetIngredientLookup"
							],
							"query": [
								{
									"key": "searchWOrd",
									"value": "m"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Post Meal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"const datatest = responseJson.data;\r",
									"pm.environment.set(\"Meal_Id\", datatest);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "RIce",
									"type": "text"
								},
								{
									"key": "MealType",
									"value": "0",
									"type": "text"
								},
								{
									"key": "CockingTime",
									"value": "9:00",
									"type": "text"
								},
								{
									"key": "PreparingTime",
									"value": "30:00",
									"type": "text"
								},
								{
									"key": "CoverImage",
									"type": "file",
									"src": "/C:/Users/Boshra/Desktop/278142635_558601698873244_5257249802694913806_n.jpg"
								},
								{
									"key": "MealSteps",
									"value": "1- Boil Some Water\n2- Cook",
									"type": "text"
								},
								{
									"key": "Allergies",
									"value": "Meat",
									"type": "text"
								},
								{
									"key": "Ingredients[0].quantity",
									"value": "3",
									"type": "text"
								},
								{
									"key": "Ingredients[0].IngredientName",
									"value": "فول",
									"type": "text"
								},
								{
									"key": "Ingredients[0].UnitType",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Post Meal [Multiple ingredient]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "Amr",
									"type": "text"
								},
								{
									"key": "MealType",
									"value": "0",
									"type": "text"
								},
								{
									"key": "CockingTime",
									"value": "9:00",
									"type": "text"
								},
								{
									"key": "PreparingTime",
									"value": "30:00",
									"type": "text"
								},
								{
									"key": "CoverImage",
									"type": "file",
									"src": "/C:/Users/Boshra/Desktop/278142635_558601698873244_5257249802694913806_n.jpg"
								},
								{
									"key": "MealSteps",
									"value": "1- Boil Some Water\n2- Cook",
									"type": "text"
								},
								{
									"key": "Allergies",
									"value": "Meat",
									"type": "text"
								},
								{
									"key": "Ingredients[0].quantity",
									"value": "3",
									"type": "text"
								},
								{
									"key": "Ingredients[0].IngredientName",
									"value": "Ta3mia",
									"type": "text"
								},
								{
									"key": "Ingredients[0].UnitType",
									"value": "0",
									"type": "text"
								},
								{
									"key": "Ingredients[1].IngredientName",
									"value": "Milk",
									"type": "text"
								},
								{
									"key": "Ingredients[1].quantity",
									"value": "5",
									"type": "text"
								},
								{
									"key": "Ingredients[1].UnitType",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/post",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Get Paged List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"url": {
							"raw": "{{baseUrlNutrishaNewAdmin}}/meal/GetPagedList?pageNumber=1&PageSize=2",
							"host": [
								"{{baseUrlNutrishaNewAdmin}}"
							],
							"path": [
								"meal",
								"GetPagedList"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "1"
								},
								{
									"key": "PageSize",
									"value": "2"
								},
								{
									"key": "SearchWord",
									"value": "R",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin: Get Meal Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginTokenAdmin}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/admin/api/v1/meal/GetById?id={{Meal_Id}}",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"meal",
								"GetById"
							],
							"query": [
								{
									"key": "id",
									"value": "{{Meal_Id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_email\", generateRandomEmail());\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//-----------------\r",
									"function generateRandomEmail() {\r",
									"   return generateRandomName(6)+\".\"+ generateRandomName(6)+\"@yahoo.com\";\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{signup_email}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByEmail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeEmail\", code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"\",\r\n    \"email\": \"{{signup_email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckVerifyCode/Otp Validation + Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"mobile\": \"\",\r\n    \"virfeyCode\": {{verifyCodeEmail}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const tokenTest = dataTest.token;\r",
									"pm.environment.set(\"loginToken_meals\", tokenTest);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{signup_email}}\",\r\n    \"password\": \"{{signup_password}}\",\r\n    \"deviceTypeId\": 0,\r\n    \"deviceToken\": \"string\",\r\n    \"language\": \"string\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mobile: Get Meal by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loginToken_meals}}"
							}
						],
						"url": {
							"raw": "https://api.nutrisha.app/mobile/api/v1/meal/GetById?id={{Meal_Id}}",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"mobile",
								"api",
								"v1",
								"meal",
								"GetById"
							],
							"query": [
								{
									"key": "id",
									"value": "{{Meal_Id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "[Test/Email Login]",
			"item": []
		},
		{
			"name": "[Test/Mobile Login]",
			"item": [
				{
					"name": "Register with Mobile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"signup_phoneNumber\", generateRandomPhoneNumber(12));\r",
									"pm.environment.set(\"signup_password\", generateRandomUserName(9));\r",
									"\r",
									"//_______________________\r",
									"function generateRandomPhoneNumber(length) {\r",
									"    var result           = '';\r",
									"    var characters       = '0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"010\"+result;\r",
									"}\r",
									"//----------------------\r",
									"function generateRandomUserName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return \"1\"+result;\r",
									"}\r",
									"//-------------\r",
									"function generateRandomName(length) {\r",
									"    var result           = '';\r",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
									"    var charactersLength = characters.length;\r",
									"    for ( var i = 0; i < length; i++ ) {\r",
									"      result += characters.charAt(Math.floor(Math.random() * \r",
									" charactersLength));\r",
									"   }\r",
									"   return result;\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"0\",\n    \"language\": \"English\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/Register",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"Register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetVerifyCodeByMobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
									"const responseJson = pm.response.json();\r",
									"const dataTest = responseJson.data;\r",
									"const code = dataTest.virfeyCode;\r",
									"console.log(code);\r",
									"pm.environment.set(\"verifyCodeMobile\", code);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"email\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/GetVerifyCode",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"GetVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mobile]CheckVerifyCode/Otp Validation + Verify Mobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"mobile\": \"{{signup_phoneNumber}}\",\r\n    \"virfeyCode\": {{verifyCodeMobile}}\r\n}"
						},
						"url": {
							"raw": "https://api.nutrisha.app/api/User/CheckVerifyCode",
							"protocol": "https",
							"host": [
								"api",
								"nutrisha",
								"app"
							],
							"path": [
								"api",
								"User",
								"CheckVerifyCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in with Phone number [Happy Scenario]",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "text/plain"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile\": \"{{signup_phoneNumber}}\",\n    \"password\": \"{{signup_password}}\",\n    \"deviceTypeId\": 0,\n    \"deviceToken\": \"string\",\n    \"language\": \"string\"\n}"
						},
						"url": {
							"raw": "{{baseUrlNutrisha}}/User/LogIn",
							"host": [
								"{{baseUrlNutrisha}}"
							],
							"path": [
								"User",
								"LogIn"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}